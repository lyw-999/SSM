package spring01junittest;

import org.junit.Test;

public class Spring01 {

    @Test
    public void test01(){
        System.out.println("1.我是单元测试,在公司中单元测试是Java程序员的自己必须做的测试" +
                "dao层 ,controller层 是否能正常运行" +
                "2. 单元测试的写法 必须是@Test 注解 来自于 org.junit.Test这个包 必须是 void静态的 没有返回值的方法" +
                "3. 方法名称和类名 最好不可以起 test() Test.java " +
                "4. 单元测试 是用来代替 main方法测试, main方法测试有一定的局限性,例如: 无法测试 web项目,比如项目request 等."
        );
    }


    // 反射: 是在jvm 虚拟机的类加载中 .java ---->文件 在这个转换期间
    // jvm 可以看到类的所有的信息，比如属性 方法 父类 接口 等
    // 即： 反射对于任意一个对象都能够调用出他的任意方法 和属性
    // 这样的动态获取信息以及动态调用对象的方法的功能叫做Java的反射机制 不是我们通俗讲的 镜面反射光线的反射
    // 为什么要学反射?.. 因为反射就是Spring框架的底层实现
    // 为什么Spring框架要用到反射，..因为 反射可以解耦
    // 什么是解隅，
    //答:解耦就是接触程序之间的耦合
    // 什么是耦合
    //答: 耦合就足程序之间过于依赖了。
    // 什么叫做依赖，
    // 答:依赖就是A程序调用B程序，A程序中 有B的方法调用

}
